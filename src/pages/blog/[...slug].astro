---
export const prerender = false;

import { useStoryblokApi } from "@storyblok/astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
import Layout from "@layouts/Layout.astro";

const storyblokApi = useStoryblokApi();
const slug = Astro.params.slug;
let content;
try {
    const { data } = await storyblokApi.get(`cdn/stories/blog/${slug}`, {
        version: import.meta.env.DEV ? "draft" : "published",
    });
    content = data.story.content;
} catch (error) {
    return Astro.redirect("/404");
}
---

<Layout
    title={content.metaTags.title}
    description={content.metaTags.description}
    imageToPreload={content.imageHero?.filename + "/m/624x0/"}
>
    <div>
        <StoryblokComponent blok={content} />
    </div>
</Layout>

<script>
    const io = new IntersectionObserver(
        (entries) => {
            entries.forEach((entry) => {
                if (entry.isIntersecting) {
                    const script = document.createElement("script");
                    script.src =
                        "https://public.codepenassets.com/embed/index.js";
                    document.querySelector("head")?.appendChild(script);
                    io.disconnect();
                }
            });
        },
        {
            rootMargin: "0% 0% 50% 0%",
        },
    );

    const codepens = document.querySelectorAll(
        ".codepen",
    ) as NodeListOf<Element>;

    codepens.forEach((codepen) => {
        io.observe(codepen);
    });
</script>
